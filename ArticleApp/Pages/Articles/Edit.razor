@page "/Articles/Edit/{Id:int}"

@inject NavigationManager NavigationManager
@inject IArticleRepository ArticleRepository

<h3>Edit</h3>

<div class="container">
	<div class="row">
		<div class="col-md-12">
			<EditForm Model="Model" OnValidSubmit="btnEdit_Click">
				<DataAnnotationsValidator></DataAnnotationsValidator>
				<ValidationSummary></ValidationSummary>
				<div class="form-group">
					<label for="id">ID : </label> @Model.Id
				</div>
				<div class="form-group">
					<label for="Title">Title</label>
					<InputText id="Title" class="form-control" placeholder="Enter Title" @bind-Value="@Model.Title"></InputText>
					<ValidationMessage For="@(() => Model.Title)" class="form-text text-muted"></ValidationMessage>
				</div>
				<div class="form-group">
					<label for="Contents">Contents</label>
					<InputTextArea id="Contents" class="form-control" placeholder="Enter Contents" rows="5" @bind-Value="@Model.Contents"></InputTextArea>
					<ValidationMessage For="@(() => Model.Contents)" class="form-text text-muted"></ValidationMessage>
				</div>
				<div class="form-group">
					<button type="submit" id="edit" class="btn btn-primary">Edit</button>
					<a href="/Articles" class="btn btn-secondary">List</a>
				</div>
			</EditForm>
		</div>
	</div>
</div>

@code {
	[Parameter]
	public int Id { get; set; }

	public Article Model { get; set; } = new Article();

	protected override async Task OnInitializedAsync()
	{
		Model = await ArticleRepository.GetArticleByIdAsync(Id);
	}

	protected async void btnEdit_Click()
	{
		// 저장 로직
		await ArticleRepository.EditArticleAsync(Model);

		// 상세보기 리스트 페이지로 이동
		NavigationManager.NavigateTo($"/Articles/Details/{Id}");
	}
}
